{{- if .Values.oned.enabled }}
{{- $fullName := include "opennebula.fullname" . -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-oned
  labels:
    app: {{ $fullName }}-oned
    {{- if .Values.oned.labels }}
    {{- toYaml .Values.oned.labels | nindent 4 }}
    {{- end }}
  {{- with .Values.oned.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.oned.replicas }}
  selector:
    matchLabels:
      app: {{ $fullName }}-oned
  serviceName: {{ $fullName }}-oned-servers
  podManagementPolicy: Parallel
  updateStrategy: 
    type: OnDelete
  template:
    metadata:
      labels:
        app: {{ $fullName }}-oned
        {{- with .Values.oned.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.oned.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      {{- if and .Values.oned.db.enabled (eq .Values.oned.db.backend "mysql") }}
      - name: mysql
        image: {{ .Values.oned.db.image.repository }}:{{ .Values.oned.db.image.tag }}
        imagePullPolicy: {{ .Values.oned.db.image.pullPolicy }}
        volumeMounts:
        {{- with .Values.timezone }}
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        {{- end }}
        - name: data
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_USER
          value: {{ .Values.oned.db.user }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysqlPassword
              name: {{ $fullName }}-db-keys
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysqlRootPassword
              name: {{ $fullName }}-db-keys
        - name: MYSQL_DATABASE
          value: {{ .Values.oned.db.dbName }}
      {{- end }}

      - name: oned
        image: {{ .Values.oned.image.repository }}:{{ .Values.oned.image.tag }}
        imagePullPolicy: {{ .Values.oned.image.pullPolicy }}
        command: [ '/scripts/init.sh' ]
        ports:
        - name: http
          containerPort: {{ .Values.oned.port }}
        - name: collectd
          containerPort: {{ .Values.oned.collectd.port }}
          protocol: UDP
        env:
        {{- if .Values.oned.createCluster }}
        - name: CREATE_CLUSTER
          value: '1'
        {{- end }}
        - name: LEADER_SVC_NAME
          value: {{ $fullName }}-oned-leader
        - name: DB_BACKEND
          value: {{ .Values.oned.db.backend }}
        {{- if eq .Values.oned.db.backend "mysql" }}
        - name: DB_SERVER
          value: {{ .Values.oned.db.server }}
        - name: DB_USER
          value: {{ .Values.oned.db.user }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysqlPassword
              name: {{ $fullName }}-db-keys
        - name: DB_NAME
          value: {{ .Values.oned.db.dbName }}
        {{- end }}
        volumeMounts:
        {{- with .Values.timezone }}
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        {{- end }}
        - name: config
          mountPath: /config
        - name: scripts
          mountPath: /scripts
        - name: one-keys
          mountPath: /secrets
        - name: ssh-keys
          mountPath: /var/lib/one/.ssh
        - name: shared
          mountPath: /var/tmp
          subPath: tmp
        - name: shared
          mountPath: /var/log/one
          subPath: log
        {{- if eq .Values.oned.db.backend "sqlite" }}
        - name: data
          mountPath: /data
        {{- end }}
        readinessProbe:
          exec:
            command:
            - /scripts/readiness-probe.sh
          initialDelaySeconds: 5
          periodSeconds: 5
      terminationGracePeriodSeconds: 30
      {{- with .Values.oned.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.oned.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.oned.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 9869
        runAsUser: 9869
      volumes:
      {{- with .Values.timezone }}
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/{{ . }}
          type: File
      {{- end }}
      - name: config
        configMap:
          name: {{ $fullName }}-oned
      - name: scripts
        configMap:
          name: {{ $fullName }}-scripts
          defaultMode: 0777
      - name: ssh-keys
        secret:
          secretName: {{ $fullName }}-ssh-keys
          defaultMode: 0400
      - name: one-keys
        secret:
          secretName: {{ $fullName }}-one-keys
      - name: data
        {{- if .Values.persistence.data.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.data.existingClaim }}
          claimName: {{ .Values.persistence.data.existingClaim }}
          {{- else }}
          claimName: {{ $fullName }}-data
          {{- end }}
        {{- else }}
        emptyDir:
        {{- end }}
      - name: shared
        {{- if .Values.persistence.shared.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.shared.existingClaim }}
          claimName: {{ .Values.persistence.shared.existingClaim }}
          {{- else }}
          claimName: {{ $fullName }}-shared
          {{- end }}
        {{- else }}
        emptyDir:
        {{- end }}

  {{- if and .Values.persistence.data.enabled (not .Values.persistence.data.existingClaim) }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ $fullName }}-data
        {{- if .Values.persistence.data.labels }}
        {{- toYaml .Values.persistence.data.labels | nindent 4 }}
        {{- end }}
      {{- with .Values.persistence.data.annotations  }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.persistence.data.finalizers  }}
      finalizers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes:
        {{- range .Values.persistence.data.accessModes }}
        - {{ . | quote }}
        {{- end }}
      storageClassName: {{ .Values.persistence.data.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistence.data.size | quote }}
  {{- end -}}
{{- end }}
