{{- $fullName := include "opennebula.fullname" . -}}
{{- if .Values.oned.enabled }}
---
kind: Secret
metadata:
  name: {{ $fullName }}-one-keys
  labels:
    app: {{ $fullName }}-one-keys
  {{- if not (and .Values.oned.oneadminPasswd .Values.oned.serveradminPasswd) }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  {{- end }}
apiVersion: v1
data:

  {{- if .Values.oned.oneadminPasswd }}
  one_auth: {{ printf "%s:%s\n" "oneadmin" .Values.oned.oneadminPasswd | b64enc }}
  {{- else }}
  one_auth: {{ printf "%s:%s\n" "oneadmin" (randAlphaNum 32) | b64enc }}
  {{- end }}

  {{- if .Values.oned.oneKey }}
  one_key: {{ printf "%s\n" .Values.oned.oneKey | b64enc }}
  {{- else }}
  one_key: {{ printf "%s\n" (randAlphaNum 32) | b64enc }}
  {{- end }}

  {{- if .Values.oned.serveradminPasswd }}
  {{- with .Values.oned.serveradminPasswd }}
  oneflow_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  occi_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  ec2_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  onegate_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  sunstone_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  {{- end }}
  {{- else }}
  {{- with (randAlphaNum 32) }}
  oneflow_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  occi_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  ec2_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  onegate_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  sunstone_auth: {{ printf "%s:%s\n" "serveradmin" . | b64enc }}
  {{- end }}
  {{- end }}
---
kind: Secret
metadata:
  name: {{ $fullName }}-ssh-keys
  labels:
    app: {{ $fullName }}-ssh-keys
  {{- if not .Values.oned.sshKey }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  {{- end }}
apiVersion: v1
data:
  config: {{ .Files.Get "config/ssh_config" | b64enc }}

  {{- if .Values.oned.sshKey }}
  id_rsa: {{ .Values.oned.sshKey | b64enc }}
  {{- else }}
  id_rsa: {{ genPrivateKey "rsa" | b64enc  }}
  {{- end }}

{{- if eq .Values.oned.db.backend "mysql" }}
---
kind: Secret
metadata:
  name: {{ $fullName }}-db-keys
  labels:
    app: {{ $fullName }}-db-keys
  {{- if not (and .Values.oned.db.passwd .Values.oned.db.rootPasswd) }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  {{- end }}
apiVersion: v1
data:

  {{- if .Values.oned.db.passwd }}
  mysqlPassword: {{ .Values.oned.db.passwd | b64enc }}
  {{- else }}
  mysqlPassword: {{ randAlphaNum 32 | b64enc }}
  {{- end }}

  {{- if .Values.oned.db.rootPasswd }}
  mysqlRootPassword: {{ .Values.oned.db.rootPasswd | b64enc }}
  {{- else }}
  mysqlRootPassword: {{ randAlphaNum 32 | b64enc }}
  {{- end }}
{{- end }}
{{- end }}
